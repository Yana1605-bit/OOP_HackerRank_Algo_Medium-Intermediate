In this problem in HackerRank called AbsolutePermutation function that has two parameters, n and k and it returns a list of integers. 
Inside of this function, a new list called 'result' for storing the final output. First thing to do is to check if k is equal 
to 0. If it is equal to 0, it will add all numbers from 1 to n into the list and it will return. Next is to check n if it is divisible by 2 Ã— k. 
If not, it cannot form a pattern, so it will adds -1 to the list and returns it. But if both conditions are correct, it will proceed to create a pattern 
using a loop that runs from 1 to n. Using a boolean variable called add to decide whether to add or subtract k from the current 
number. If add is true, it adds i + k to the list, but if not it will adds i - k. Every group of k numbers, the value of add is 
flipped to alternate between addition and subtraction. This process continues until all numbers are processed and correct. Lastly, it will 
return the result of list of numbers based on the given n and k values.
